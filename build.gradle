apply plugin: 'java'
apply plugin: 'org.asciidoctor.convert'
                                                                
version='2020-04-04'
def versionNumber='02:03'  //write as hh:mm because it is used in the time stamp in jar.
//def versionZipJar='2020-03-23'

buildscript {
    repositories {
       jcenter()
    }

    dependencies {
        //dedicated files, missing some:
        //classpath files ('C:/programs/gradle/jars/asciidoctorj-1.5.6.jar', 'C:/programs/gradle/jars/asciidoctor-gradle-plugin-1.5.6.jar')
        //loaded and stored in C:/User/.../.gradle/caches
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.6'
        //does not work: classpath 'org.asciidoctor:AsciiDoctorj-pdf:1.5.0'
    }
}



//sourceSets {
//  external {
//    java {
//      srcDir "$projectDir/."
//      include "xxxsrc/mainxxx/java/org/vishia/checkDeps_C/CheckDeps.java"
//    }
//  }
//  main {                                             
//    java {
//      compileClasspath += external.classes
//    }                                                             
//  }                                                  
//}
//



dependencies {
  implementation files('libs/junit-platform-console-standalone-1.6.0.jar')
}



sourceSets {
    main {
         java {
            srcDirs = ['src/main/java']
            //java = 'org/vishia/checkDeps_C/CheckDeps.java'
         }                                       
    }

    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}

                              
 
task jcc_zipjar(type: Exec) {
  workingDir 'src/main/java/_make'
  executable 'sh'
  args '-c', './+makejar_vishiaBase.sh'
}






task XXXsrcZip(type: Zip) {
  dependsOn jcc_main
  dependsOn jcc_minisys
    archiveFileName = 'vishiaBase-'+version+'-source.zip'
    //destinationDirectory = file("$buildDir/libs")
    destinationDirectory = file("deploy")

    from "src/main/java"
    include "_make/*"
    include "org/**/*"
}


XXXasciidoctor {
  dependsOn srcZip
  sourceDir = file('src/docs/asciidoc')
  outputDir = file('.')  //create a dir html5
  //backends = ['html', 'pdf']
}


test {                                                                                                 
  dependsOn jcc_zipjar
  //dependsOn asciidoctor
  testLogging.showStandardStreams = true
  useJUnitPlatform {
    includeTags 'teststd'
    includeTags 'simple'
  }
}




// sourceSets {
//  main {
//    java {
//      exclude 'org.vishia.*'
//      'org.vishia.checkDeps_C.CheckDeps.java'             
//    }                                                      
//  }                                                                
//}
//

//copies the sources to one jar file, named PROJECT-sources.jar
//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
////    from javadoc.destinationDir
//}

//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}

//defaultTask 'test'


