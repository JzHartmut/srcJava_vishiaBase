package org.vishia.odg.data;

import java.util.LinkedList;
import java.util.List;
import org.vishia.util.SetLineColumn_ifc;

import org.vishia.odg.data.XmlForOdg.*;


/**This file is generated by genJavaOut.jzTc script. 
 * It is the derived class to write Zbnf result. */
public class XmlForOdg_Zbnf {
  
  
  public XmlForOdg dataroot;
  
  /**Referenced working instance will be filled.*/
  public final XmlForOdg dataXmlForOdg;
  
  /**Default ctor for non-inherit instance. */
  public XmlForOdg_Zbnf ( ) {
    this.dataXmlForOdg = new XmlForOdg();
  }
  
  
  
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Office_document_content?office_document_content&gt; for ZBNF data store*/
    public Office_document_content_Zbnf new_office_document_content() { 
      Office_document_content_Zbnf val = new Office_document_content_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Office_document_content?office_document_content&gt;  */
    public Office_document_content_Zbnf new_office_document_content(String office_version ) { 
      Office_document_content_Zbnf val = new Office_document_content_Zbnf();
      val.dataOffice_document_content.office_version = office_version;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Office_document_content?office_document_content&gt;*/
    public void set_office_document_content(Office_document_content val) { 
      dataroot.office_document_content = val;
    }
    
    



  /**Class for Writing the Component Office_document_content.*/
  public static class Office_document_content_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Office_document_content dataOffice_document_content;
    
    /**Default ctor for non-inherit instance. */
    public Office_document_content_Zbnf ( ) {
      this.dataOffice_document_content = new XmlForOdg.Office_document_content();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Office_document_content_Zbnf ( XmlForOdg.Office_document_content data) {
            this.dataOffice_document_content = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataOffice_document_content._srcLine_ = line; 
      this.dataOffice_document_content._srcColumn_ = column; 
      this.dataOffice_document_content._srcFile_ = sFile; 
    }
  
  
  
  
    /**Creates an instance for the result Zbnf . &lt;Office_automatic_styles?office_automatic_styles&gt; for ZBNF data store*/
    public Office_automatic_styles_Zbnf new_office_automatic_styles() { 
      Office_automatic_styles_Zbnf val = new Office_automatic_styles_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Office_automatic_styles?office_automatic_styles&gt;*/
    public void set_office_automatic_styles(Office_automatic_styles val) { 
      dataOffice_document_content.office_automatic_styles = val;
    }
    
    
    /**Creates an instance for the result Zbnf . &lt;Office_body?office_body&gt; for ZBNF data store*/
    public Office_body_Zbnf new_office_body() { 
      Office_body_Zbnf val = new Office_body_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Office_body?office_body&gt;*/
    public void set_office_body(Office_body val) { 
      dataOffice_document_content.office_body = val;
    }
    
    
    /**Creates an instance for the result Zbnf . &lt;Office_font_face_decls?office_font_face_decls&gt; for ZBNF data store*/
    public Office_font_face_decls_Zbnf new_office_font_face_decls() { 
      Office_font_face_decls_Zbnf val = new Office_font_face_decls_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Office_font_face_decls?office_font_face_decls&gt;*/
    public void set_office_font_face_decls(Office_font_face_decls val) { 
      dataOffice_document_content.office_font_face_decls = val;
    }
    
    
    /**Set routine for the singular component &lt;String?office_scripts>. */
    public void set_office_scripts(String val) { this.dataOffice_document_content.office_scripts = val; }
    
    
  
  }




  /**Class for Writing the Component Office_automatic_styles.*/
  public static class Office_automatic_styles_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Office_automatic_styles dataOffice_automatic_styles;
    
    /**Default ctor for non-inherit instance. */
    public Office_automatic_styles_Zbnf ( ) {
      this.dataOffice_automatic_styles = new XmlForOdg.Office_automatic_styles();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Office_automatic_styles_Zbnf ( XmlForOdg.Office_automatic_styles data) {
            this.dataOffice_automatic_styles = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataOffice_automatic_styles._srcLine_ = line; 
      this.dataOffice_automatic_styles._srcColumn_ = column; 
      this.dataOffice_automatic_styles._srcFile_ = sFile; 
    }
  
  
  
  
    /**create and add routine for the list component <Style_style?style_style>. */
    public Style_style_Zbnf new_style_style() { 
      Style_style_Zbnf val = new Style_style_Zbnf(); 
      return val; 
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Style_style?style_style&gt;  */
    public Style_style_Zbnf new_style_style(String style_family, String style_name, String style_parent_style_name ) { 
      Style_style_Zbnf val = new Style_style_Zbnf();
      val.dataStyle_style.style_family = style_family;
      val.dataStyle_style.style_name = style_name;
      val.dataStyle_style.style_parent_style_name = style_parent_style_name;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Add the result to the list. &lt;Style_style?style_style&gt;*/
    public void add_style_style(Style_style val) {
      if(dataOffice_automatic_styles.style_style==null) { dataOffice_automatic_styles.style_style = new LinkedList<Style_style>(); }
      dataOffice_automatic_styles.style_style.add(val); 
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Text_list_style?text_list_style&gt; for ZBNF data store*/
    public Text_list_style_Zbnf new_text_list_style() { 
      Text_list_style_Zbnf val = new Text_list_style_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Text_list_style?text_list_style&gt;  */
    public Text_list_style_Zbnf new_text_list_style(String style_name ) { 
      Text_list_style_Zbnf val = new Text_list_style_Zbnf();
      val.dataText_list_style.style_name = style_name;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Text_list_style?text_list_style&gt;*/
    public void set_text_list_style(Text_list_style val) { 
      dataOffice_automatic_styles.text_list_style = val;
    }
    
    
  
  }




  /**Class for Writing the Component Office_body.*/
  public static class Office_body_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Office_body dataOffice_body;
    
    /**Default ctor for non-inherit instance. */
    public Office_body_Zbnf ( ) {
      this.dataOffice_body = new XmlForOdg.Office_body();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Office_body_Zbnf ( XmlForOdg.Office_body data) {
            this.dataOffice_body = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataOffice_body._srcLine_ = line; 
      this.dataOffice_body._srcColumn_ = column; 
      this.dataOffice_body._srcFile_ = sFile; 
    }
  
  
  
  
    /**Creates an instance for the result Zbnf . &lt;Office_drawing?office_drawing&gt; for ZBNF data store*/
    public Office_drawing_Zbnf new_office_drawing() { 
      Office_drawing_Zbnf val = new Office_drawing_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Office_drawing?office_drawing&gt;*/
    public void set_office_drawing(Office_drawing val) { 
      dataOffice_body.office_drawing = val;
    }
    
    
  
  }




  /**Class for Writing the Component Office_font_face_decls.*/
  public static class Office_font_face_decls_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Office_font_face_decls dataOffice_font_face_decls;
    
    /**Default ctor for non-inherit instance. */
    public Office_font_face_decls_Zbnf ( ) {
      this.dataOffice_font_face_decls = new XmlForOdg.Office_font_face_decls();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Office_font_face_decls_Zbnf ( XmlForOdg.Office_font_face_decls data) {
            this.dataOffice_font_face_decls = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataOffice_font_face_decls._srcLine_ = line; 
      this.dataOffice_font_face_decls._srcColumn_ = column; 
      this.dataOffice_font_face_decls._srcFile_ = sFile; 
    }
  
  
  
  
    /**create and add routine for the list component <Style_font_face?style_font_face>. */
    public Style_font_face_Zbnf new_style_font_face() { 
      Style_font_face_Zbnf val = new Style_font_face_Zbnf(); 
      return val; 
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Style_font_face?style_font_face&gt;  */
    public Style_font_face_Zbnf new_style_font_face(String style_font_adornments, String style_font_family_generic, String style_font_pitch, String style_name, String svg_font_family ) { 
      Style_font_face_Zbnf val = new Style_font_face_Zbnf();
      val.dataStyle_font_face.style_font_adornments = style_font_adornments;
      val.dataStyle_font_face.style_font_family_generic = style_font_family_generic;
      val.dataStyle_font_face.style_font_pitch = style_font_pitch;
      val.dataStyle_font_face.style_name = style_name;
      val.dataStyle_font_face.svg_font_family = svg_font_family;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Add the result to the list. &lt;Style_font_face?style_font_face&gt;*/
    public void add_style_font_face(Style_font_face val) {
      if(dataOffice_font_face_decls.style_font_face==null) { dataOffice_font_face_decls.style_font_face = new LinkedList<Style_font_face>(); }
      dataOffice_font_face_decls.style_font_face.add(val); 
    }
    
    
  
  }




  /**Class for Writing the Component Style_style.*/
  public static class Style_style_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Style_style dataStyle_style;
    
    /**Default ctor for non-inherit instance. */
    public Style_style_Zbnf ( ) {
      this.dataStyle_style = new XmlForOdg.Style_style();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Style_style_Zbnf ( XmlForOdg.Style_style data) {
            this.dataStyle_style = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataStyle_style._srcLine_ = line; 
      this.dataStyle_style._srcColumn_ = column; 
      this.dataStyle_style._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?style_family>. */
    public void set_style_family(String val) { this.dataStyle_style.style_family = val; }
    
    
    /**Set routine for the singular component &lt;String?style_name>. */
    public void set_style_name(String val) { this.dataStyle_style.style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?style_parent_style_name>. */
    public void set_style_parent_style_name(String val) { this.dataStyle_style.style_parent_style_name = val; }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Loext_graphic_properties?loext_graphic_properties&gt; for ZBNF data store*/
    public Loext_graphic_properties_Zbnf new_loext_graphic_properties() { 
      Loext_graphic_properties_Zbnf val = new Loext_graphic_properties_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Loext_graphic_properties?loext_graphic_properties&gt;  */
    public Loext_graphic_properties_Zbnf new_loext_graphic_properties(String draw_fill, String draw_fill_color, String draw_opacity ) { 
      Loext_graphic_properties_Zbnf val = new Loext_graphic_properties_Zbnf();
      val.dataLoext_graphic_properties.draw_fill = draw_fill;
      val.dataLoext_graphic_properties.draw_fill_color = draw_fill_color;
      val.dataLoext_graphic_properties.draw_opacity = draw_opacity;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Loext_graphic_properties?loext_graphic_properties&gt;*/
    public void set_loext_graphic_properties(Loext_graphic_properties val) { 
      dataStyle_style.loext_graphic_properties = val;
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Style_graphic_properties?style_graphic_properties&gt; for ZBNF data store*/
    public Style_graphic_properties_Zbnf new_style_graphic_properties() { 
      Style_graphic_properties_Zbnf val = new Style_graphic_properties_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Style_graphic_properties?style_graphic_properties&gt;  */
    public Style_graphic_properties_Zbnf new_style_graphic_properties(String draw_auto_grow_height, String draw_auto_grow_width, String draw_fill, String draw_fill_color, String draw_marker_end, String draw_marker_end_width, String draw_opacity, String draw_shadow_opacity, String draw_stroke, String draw_textarea_horizontal_align, String draw_textarea_vertical_align, String fo_min_height, String fo_min_width, String svg_stroke_color ) { 
      Style_graphic_properties_Zbnf val = new Style_graphic_properties_Zbnf();
      val.dataStyle_graphic_properties.draw_auto_grow_height = draw_auto_grow_height;
      val.dataStyle_graphic_properties.draw_auto_grow_width = draw_auto_grow_width;
      val.dataStyle_graphic_properties.draw_fill = draw_fill;
      val.dataStyle_graphic_properties.draw_fill_color = draw_fill_color;
      val.dataStyle_graphic_properties.draw_marker_end = draw_marker_end;
      val.dataStyle_graphic_properties.draw_marker_end_width = draw_marker_end_width;
      val.dataStyle_graphic_properties.draw_opacity = draw_opacity;
      val.dataStyle_graphic_properties.draw_shadow_opacity = draw_shadow_opacity;
      val.dataStyle_graphic_properties.draw_stroke = draw_stroke;
      val.dataStyle_graphic_properties.draw_textarea_horizontal_align = draw_textarea_horizontal_align;
      val.dataStyle_graphic_properties.draw_textarea_vertical_align = draw_textarea_vertical_align;
      val.dataStyle_graphic_properties.fo_min_height = fo_min_height;
      val.dataStyle_graphic_properties.fo_min_width = fo_min_width;
      val.dataStyle_graphic_properties.svg_stroke_color = svg_stroke_color;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Style_graphic_properties?style_graphic_properties&gt;*/
    public void set_style_graphic_properties(Style_graphic_properties val) { 
      dataStyle_style.style_graphic_properties = val;
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Style_paragraph_properties?style_paragraph_properties&gt; for ZBNF data store*/
    public Style_paragraph_properties_Zbnf new_style_paragraph_properties() { 
      Style_paragraph_properties_Zbnf val = new Style_paragraph_properties_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Style_paragraph_properties?style_paragraph_properties&gt;  */
    public Style_paragraph_properties_Zbnf new_style_paragraph_properties(String fo_text_align, String style_text_autospace, String style_writing_mode ) { 
      Style_paragraph_properties_Zbnf val = new Style_paragraph_properties_Zbnf();
      val.dataStyle_paragraph_properties.fo_text_align = fo_text_align;
      val.dataStyle_paragraph_properties.style_text_autospace = style_text_autospace;
      val.dataStyle_paragraph_properties.style_writing_mode = style_writing_mode;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Style_paragraph_properties?style_paragraph_properties&gt;*/
    public void set_style_paragraph_properties(Style_paragraph_properties val) { 
      dataStyle_style.style_paragraph_properties = val;
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Style_text_properties?style_text_properties&gt; for ZBNF data store*/
    public Style_text_properties_Zbnf new_style_text_properties() { 
      Style_text_properties_Zbnf val = new Style_text_properties_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Style_text_properties?style_text_properties&gt;  */
    public Style_text_properties_Zbnf new_style_text_properties(String fo_color, String fo_font_family, String fo_font_size, String fo_font_style, String fo_font_variant, String fo_font_weight, String fo_text_shadow, String fo_text_transform, String style_font_name_asian, String style_font_name_complex, String style_font_relief, String style_font_size_asian, String style_font_size_complex, String style_font_style_asian, String style_font_style_complex, String style_font_weight_asian, String style_font_weight_complex, String style_letter_kerning, String style_text_emphasize, String style_text_line_through_style, String style_text_line_through_type, String style_text_outline, String style_text_overline_color, String style_text_overline_style, String style_text_underline_style, String style_use_window_font_color ) { 
      Style_text_properties_Zbnf val = new Style_text_properties_Zbnf();
      val.dataStyle_text_properties.fo_color = fo_color;
      val.dataStyle_text_properties.fo_font_family = fo_font_family;
      val.dataStyle_text_properties.fo_font_size = fo_font_size;
      val.dataStyle_text_properties.fo_font_style = fo_font_style;
      val.dataStyle_text_properties.fo_font_variant = fo_font_variant;
      val.dataStyle_text_properties.fo_font_weight = fo_font_weight;
      val.dataStyle_text_properties.fo_text_shadow = fo_text_shadow;
      val.dataStyle_text_properties.fo_text_transform = fo_text_transform;
      val.dataStyle_text_properties.style_font_name_asian = style_font_name_asian;
      val.dataStyle_text_properties.style_font_name_complex = style_font_name_complex;
      val.dataStyle_text_properties.style_font_relief = style_font_relief;
      val.dataStyle_text_properties.style_font_size_asian = style_font_size_asian;
      val.dataStyle_text_properties.style_font_size_complex = style_font_size_complex;
      val.dataStyle_text_properties.style_font_style_asian = style_font_style_asian;
      val.dataStyle_text_properties.style_font_style_complex = style_font_style_complex;
      val.dataStyle_text_properties.style_font_weight_asian = style_font_weight_asian;
      val.dataStyle_text_properties.style_font_weight_complex = style_font_weight_complex;
      val.dataStyle_text_properties.style_letter_kerning = style_letter_kerning;
      val.dataStyle_text_properties.style_text_emphasize = style_text_emphasize;
      val.dataStyle_text_properties.style_text_line_through_style = style_text_line_through_style;
      val.dataStyle_text_properties.style_text_line_through_type = style_text_line_through_type;
      val.dataStyle_text_properties.style_text_outline = style_text_outline;
      val.dataStyle_text_properties.style_text_overline_color = style_text_overline_color;
      val.dataStyle_text_properties.style_text_overline_style = style_text_overline_style;
      val.dataStyle_text_properties.style_text_underline_style = style_text_underline_style;
      val.dataStyle_text_properties.style_use_window_font_color = style_use_window_font_color;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Style_text_properties?style_text_properties&gt;*/
    public void set_style_text_properties(Style_text_properties val) { 
      dataStyle_style.style_text_properties = val;
    }
    
    
  
  }




  /**Class for Writing the Component Text_list_style.*/
  public static class Text_list_style_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Text_list_style dataText_list_style;
    
    /**Default ctor for non-inherit instance. */
    public Text_list_style_Zbnf ( ) {
      this.dataText_list_style = new XmlForOdg.Text_list_style();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Text_list_style_Zbnf ( XmlForOdg.Text_list_style data) {
            this.dataText_list_style = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataText_list_style._srcLine_ = line; 
      this.dataText_list_style._srcColumn_ = column; 
      this.dataText_list_style._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?style_name>. */
    public void set_style_name(String val) { this.dataText_list_style.style_name = val; }
    
    
    /**create and add routine for the list component <Text_list_level_style_bullet?text_list_level_style_bullet>. */
    public Text_list_level_style_bullet_Zbnf new_text_list_level_style_bullet() { 
      Text_list_level_style_bullet_Zbnf val = new Text_list_level_style_bullet_Zbnf(); 
      return val; 
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Text_list_level_style_bullet?text_list_level_style_bullet&gt;  */
    public Text_list_level_style_bullet_Zbnf new_text_list_level_style_bullet(String text_bullet_char, String text_level ) { 
      Text_list_level_style_bullet_Zbnf val = new Text_list_level_style_bullet_Zbnf();
      val.dataText_list_level_style_bullet.text_bullet_char = text_bullet_char;
      val.dataText_list_level_style_bullet.text_level = text_level;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Add the result to the list. &lt;Text_list_level_style_bullet?text_list_level_style_bullet&gt;*/
    public void add_text_list_level_style_bullet(Text_list_level_style_bullet val) {
      if(dataText_list_style.text_list_level_style_bullet==null) { dataText_list_style.text_list_level_style_bullet = new LinkedList<Text_list_level_style_bullet>(); }
      dataText_list_style.text_list_level_style_bullet.add(val); 
    }
    
    
  
  }




  /**Class for Writing the Component Office_drawing.*/
  public static class Office_drawing_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Office_drawing dataOffice_drawing;
    
    /**Default ctor for non-inherit instance. */
    public Office_drawing_Zbnf ( ) {
      this.dataOffice_drawing = new XmlForOdg.Office_drawing();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Office_drawing_Zbnf ( XmlForOdg.Office_drawing data) {
            this.dataOffice_drawing = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataOffice_drawing._srcLine_ = line; 
      this.dataOffice_drawing._srcColumn_ = column; 
      this.dataOffice_drawing._srcFile_ = sFile; 
    }
  
  
  
  
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Draw_page?draw_page&gt; for ZBNF data store*/
    public Draw_page_Zbnf new_draw_page() { 
      Draw_page_Zbnf val = new Draw_page_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_page?draw_page&gt;  */
    public Draw_page_Zbnf new_draw_page(String draw_master_page_name, String draw_name, String draw_style_name ) { 
      Draw_page_Zbnf val = new Draw_page_Zbnf();
      val.dataDraw_page.draw_master_page_name = draw_master_page_name;
      val.dataDraw_page.draw_name = draw_name;
      val.dataDraw_page.draw_style_name = draw_style_name;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Draw_page?draw_page&gt;*/
    public void set_draw_page(Draw_page val) { 
      dataOffice_drawing.draw_page = val;
    }
    
    
  
  }




  /**Class for Writing the Component Style_font_face.*/
  public static class Style_font_face_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Style_font_face dataStyle_font_face;
    
    /**Default ctor for non-inherit instance. */
    public Style_font_face_Zbnf ( ) {
      this.dataStyle_font_face = new XmlForOdg.Style_font_face();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Style_font_face_Zbnf ( XmlForOdg.Style_font_face data) {
            this.dataStyle_font_face = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataStyle_font_face._srcLine_ = line; 
      this.dataStyle_font_face._srcColumn_ = column; 
      this.dataStyle_font_face._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?style_font_adornments>. */
    public void set_style_font_adornments(String val) { this.dataStyle_font_face.style_font_adornments = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_family_generic>. */
    public void set_style_font_family_generic(String val) { this.dataStyle_font_face.style_font_family_generic = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_pitch>. */
    public void set_style_font_pitch(String val) { this.dataStyle_font_face.style_font_pitch = val; }
    
    
    /**Set routine for the singular component &lt;String?style_name>. */
    public void set_style_name(String val) { this.dataStyle_font_face.style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_font_family>. */
    public void set_svg_font_family(String val) { this.dataStyle_font_face.svg_font_family = val; }
    
    
  
  }




  /**Class for Writing the Component Loext_graphic_properties.*/
  public static class Loext_graphic_properties_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Loext_graphic_properties dataLoext_graphic_properties;
    
    /**Default ctor for non-inherit instance. */
    public Loext_graphic_properties_Zbnf ( ) {
      this.dataLoext_graphic_properties = new XmlForOdg.Loext_graphic_properties();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Loext_graphic_properties_Zbnf ( XmlForOdg.Loext_graphic_properties data) {
            this.dataLoext_graphic_properties = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataLoext_graphic_properties._srcLine_ = line; 
      this.dataLoext_graphic_properties._srcColumn_ = column; 
      this.dataLoext_graphic_properties._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_fill>. */
    public void set_draw_fill(String val) { this.dataLoext_graphic_properties.draw_fill = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_fill_color>. */
    public void set_draw_fill_color(String val) { this.dataLoext_graphic_properties.draw_fill_color = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_opacity>. */
    public void set_draw_opacity(String val) { this.dataLoext_graphic_properties.draw_opacity = val; }
    
    
  
  }




  /**Class for Writing the Component Style_graphic_properties.*/
  public static class Style_graphic_properties_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Style_graphic_properties dataStyle_graphic_properties;
    
    /**Default ctor for non-inherit instance. */
    public Style_graphic_properties_Zbnf ( ) {
      this.dataStyle_graphic_properties = new XmlForOdg.Style_graphic_properties();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Style_graphic_properties_Zbnf ( XmlForOdg.Style_graphic_properties data) {
            this.dataStyle_graphic_properties = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataStyle_graphic_properties._srcLine_ = line; 
      this.dataStyle_graphic_properties._srcColumn_ = column; 
      this.dataStyle_graphic_properties._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_auto_grow_height>. */
    public void set_draw_auto_grow_height(String val) { this.dataStyle_graphic_properties.draw_auto_grow_height = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_auto_grow_width>. */
    public void set_draw_auto_grow_width(String val) { this.dataStyle_graphic_properties.draw_auto_grow_width = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_fill>. */
    public void set_draw_fill(String val) { this.dataStyle_graphic_properties.draw_fill = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_fill_color>. */
    public void set_draw_fill_color(String val) { this.dataStyle_graphic_properties.draw_fill_color = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_marker_end>. */
    public void set_draw_marker_end(String val) { this.dataStyle_graphic_properties.draw_marker_end = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_marker_end_width>. */
    public void set_draw_marker_end_width(String val) { this.dataStyle_graphic_properties.draw_marker_end_width = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_opacity>. */
    public void set_draw_opacity(String val) { this.dataStyle_graphic_properties.draw_opacity = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_shadow_opacity>. */
    public void set_draw_shadow_opacity(String val) { this.dataStyle_graphic_properties.draw_shadow_opacity = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_stroke>. */
    public void set_draw_stroke(String val) { this.dataStyle_graphic_properties.draw_stroke = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_textarea_horizontal_align>. */
    public void set_draw_textarea_horizontal_align(String val) { this.dataStyle_graphic_properties.draw_textarea_horizontal_align = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_textarea_vertical_align>. */
    public void set_draw_textarea_vertical_align(String val) { this.dataStyle_graphic_properties.draw_textarea_vertical_align = val; }
    
    
    /**Set routine for the singular component &lt;String?fo_min_height>. */
    public void set_fo_min_height(String val) { this.dataStyle_graphic_properties.fo_min_height = val; }
    
    
    /**Set routine for the singular component &lt;String?fo_min_width>. */
    public void set_fo_min_width(String val) { this.dataStyle_graphic_properties.fo_min_width = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_stroke_color>. */
    public void set_svg_stroke_color(String val) { this.dataStyle_graphic_properties.svg_stroke_color = val; }
    
    
  
  }




  /**Class for Writing the Component Style_paragraph_properties.*/
  public static class Style_paragraph_properties_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Style_paragraph_properties dataStyle_paragraph_properties;
    
    /**Default ctor for non-inherit instance. */
    public Style_paragraph_properties_Zbnf ( ) {
      this.dataStyle_paragraph_properties = new XmlForOdg.Style_paragraph_properties();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Style_paragraph_properties_Zbnf ( XmlForOdg.Style_paragraph_properties data) {
            this.dataStyle_paragraph_properties = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataStyle_paragraph_properties._srcLine_ = line; 
      this.dataStyle_paragraph_properties._srcColumn_ = column; 
      this.dataStyle_paragraph_properties._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?fo_text_align>. */
    public void set_fo_text_align(String val) { this.dataStyle_paragraph_properties.fo_text_align = val; }
    
    
    /**Set routine for the singular component &lt;String?style_text_autospace>. */
    public void set_style_text_autospace(String val) { this.dataStyle_paragraph_properties.style_text_autospace = val; }
    
    
    /**Set routine for the singular component &lt;String?style_writing_mode>. */
    public void set_style_writing_mode(String val) { this.dataStyle_paragraph_properties.style_writing_mode = val; }
    
    
  
  }




  /**Class for Writing the Component Style_text_properties.*/
  public static class Style_text_properties_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Style_text_properties dataStyle_text_properties;
    
    /**Default ctor for non-inherit instance. */
    public Style_text_properties_Zbnf ( ) {
      this.dataStyle_text_properties = new XmlForOdg.Style_text_properties();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Style_text_properties_Zbnf ( XmlForOdg.Style_text_properties data) {
            this.dataStyle_text_properties = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataStyle_text_properties._srcLine_ = line; 
      this.dataStyle_text_properties._srcColumn_ = column; 
      this.dataStyle_text_properties._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?fo_color>. */
    public void set_fo_color(String val) { this.dataStyle_text_properties.fo_color = val; }
    
    
    /**Set routine for the singular component &lt;String?fo_font_family>. */
    public void set_fo_font_family(String val) { this.dataStyle_text_properties.fo_font_family = val; }
    
    
    /**Set routine for the singular component &lt;String?fo_font_size>. */
    public void set_fo_font_size(String val) { this.dataStyle_text_properties.fo_font_size = val; }
    
    
    /**Set routine for the singular component &lt;String?fo_font_style>. */
    public void set_fo_font_style(String val) { this.dataStyle_text_properties.fo_font_style = val; }
    
    
    /**Set routine for the singular component &lt;String?fo_font_variant>. */
    public void set_fo_font_variant(String val) { this.dataStyle_text_properties.fo_font_variant = val; }
    
    
    /**Set routine for the singular component &lt;String?fo_font_weight>. */
    public void set_fo_font_weight(String val) { this.dataStyle_text_properties.fo_font_weight = val; }
    
    
    /**Set routine for the singular component &lt;String?fo_text_shadow>. */
    public void set_fo_text_shadow(String val) { this.dataStyle_text_properties.fo_text_shadow = val; }
    
    
    /**Set routine for the singular component &lt;String?fo_text_transform>. */
    public void set_fo_text_transform(String val) { this.dataStyle_text_properties.fo_text_transform = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_name_asian>. */
    public void set_style_font_name_asian(String val) { this.dataStyle_text_properties.style_font_name_asian = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_name_complex>. */
    public void set_style_font_name_complex(String val) { this.dataStyle_text_properties.style_font_name_complex = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_relief>. */
    public void set_style_font_relief(String val) { this.dataStyle_text_properties.style_font_relief = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_size_asian>. */
    public void set_style_font_size_asian(String val) { this.dataStyle_text_properties.style_font_size_asian = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_size_complex>. */
    public void set_style_font_size_complex(String val) { this.dataStyle_text_properties.style_font_size_complex = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_style_asian>. */
    public void set_style_font_style_asian(String val) { this.dataStyle_text_properties.style_font_style_asian = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_style_complex>. */
    public void set_style_font_style_complex(String val) { this.dataStyle_text_properties.style_font_style_complex = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_weight_asian>. */
    public void set_style_font_weight_asian(String val) { this.dataStyle_text_properties.style_font_weight_asian = val; }
    
    
    /**Set routine for the singular component &lt;String?style_font_weight_complex>. */
    public void set_style_font_weight_complex(String val) { this.dataStyle_text_properties.style_font_weight_complex = val; }
    
    
    /**Set routine for the singular component &lt;String?style_letter_kerning>. */
    public void set_style_letter_kerning(String val) { this.dataStyle_text_properties.style_letter_kerning = val; }
    
    
    /**Set routine for the singular component &lt;String?style_text_emphasize>. */
    public void set_style_text_emphasize(String val) { this.dataStyle_text_properties.style_text_emphasize = val; }
    
    
    /**Set routine for the singular component &lt;String?style_text_line_through_style>. */
    public void set_style_text_line_through_style(String val) { this.dataStyle_text_properties.style_text_line_through_style = val; }
    
    
    /**Set routine for the singular component &lt;String?style_text_line_through_type>. */
    public void set_style_text_line_through_type(String val) { this.dataStyle_text_properties.style_text_line_through_type = val; }
    
    
    /**Set routine for the singular component &lt;String?style_text_outline>. */
    public void set_style_text_outline(String val) { this.dataStyle_text_properties.style_text_outline = val; }
    
    
    /**Set routine for the singular component &lt;String?style_text_overline_color>. */
    public void set_style_text_overline_color(String val) { this.dataStyle_text_properties.style_text_overline_color = val; }
    
    
    /**Set routine for the singular component &lt;String?style_text_overline_style>. */
    public void set_style_text_overline_style(String val) { this.dataStyle_text_properties.style_text_overline_style = val; }
    
    
    /**Set routine for the singular component &lt;String?style_text_underline_style>. */
    public void set_style_text_underline_style(String val) { this.dataStyle_text_properties.style_text_underline_style = val; }
    
    
    /**Set routine for the singular component &lt;String?style_use_window_font_color>. */
    public void set_style_use_window_font_color(String val) { this.dataStyle_text_properties.style_use_window_font_color = val; }
    
    
  
  }




  /**Class for Writing the Component Text_list_level_style_bullet.*/
  public static class Text_list_level_style_bullet_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Text_list_level_style_bullet dataText_list_level_style_bullet;
    
    /**Default ctor for non-inherit instance. */
    public Text_list_level_style_bullet_Zbnf ( ) {
      this.dataText_list_level_style_bullet = new XmlForOdg.Text_list_level_style_bullet();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Text_list_level_style_bullet_Zbnf ( XmlForOdg.Text_list_level_style_bullet data) {
            this.dataText_list_level_style_bullet = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataText_list_level_style_bullet._srcLine_ = line; 
      this.dataText_list_level_style_bullet._srcColumn_ = column; 
      this.dataText_list_level_style_bullet._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?text_bullet_char>. */
    public void set_text_bullet_char(String val) { this.dataText_list_level_style_bullet.text_bullet_char = val; }
    
    
    /**Set routine for the singular component &lt;String?text_level>. */
    public void set_text_level(String val) { this.dataText_list_level_style_bullet.text_level = val; }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Style_list_level_properties?style_list_level_properties&gt; for ZBNF data store*/
    public Style_list_level_properties_Zbnf new_style_list_level_properties() { 
      Style_list_level_properties_Zbnf val = new Style_list_level_properties_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Style_list_level_properties?style_list_level_properties&gt;  */
    public Style_list_level_properties_Zbnf new_style_list_level_properties(String text_min_label_width, String text_space_before ) { 
      Style_list_level_properties_Zbnf val = new Style_list_level_properties_Zbnf();
      val.dataStyle_list_level_properties.text_min_label_width = text_min_label_width;
      val.dataStyle_list_level_properties.text_space_before = text_space_before;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Style_list_level_properties?style_list_level_properties&gt;*/
    public void set_style_list_level_properties(Style_list_level_properties val) { 
      dataText_list_level_style_bullet.style_list_level_properties = val;
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Style_text_properties?style_text_properties&gt; for ZBNF data store*/
    public Style_text_properties_Zbnf new_style_text_properties() { 
      Style_text_properties_Zbnf val = new Style_text_properties_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Style_text_properties?style_text_properties&gt;  */
    public Style_text_properties_Zbnf new_style_text_properties(String fo_font_family, String fo_font_size, String style_use_window_font_color ) { 
      Style_text_properties_Zbnf val = new Style_text_properties_Zbnf();
      val.dataStyle_text_properties.fo_font_family = fo_font_family;
      val.dataStyle_text_properties.fo_font_size = fo_font_size;
      val.dataStyle_text_properties.style_use_window_font_color = style_use_window_font_color;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Style_text_properties?style_text_properties&gt;*/
    public void set_style_text_properties(Style_text_properties val) { 
      dataText_list_level_style_bullet.style_text_properties = val;
    }
    
    
  
  }




  /**Class for Writing the Component Draw_page.*/
  public static class Draw_page_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_page dataDraw_page;
    
    /**Default ctor for non-inherit instance. */
    public Draw_page_Zbnf ( ) {
      this.dataDraw_page = new XmlForOdg.Draw_page();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_page_Zbnf ( XmlForOdg.Draw_page data) {
            this.dataDraw_page = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_page._srcLine_ = line; 
      this.dataDraw_page._srcColumn_ = column; 
      this.dataDraw_page._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_master_page_name>. */
    public void set_draw_master_page_name(String val) { this.dataDraw_page.draw_master_page_name = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_name>. */
    public void set_draw_name(String val) { this.dataDraw_page.draw_name = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_style_name>. */
    public void set_draw_style_name(String val) { this.dataDraw_page.draw_style_name = val; }
    
    
    /**create and add routine for the list component <Draw_connector?draw_connector>. */
    public Draw_connector_Zbnf new_draw_connector() { 
      Draw_connector_Zbnf val = new Draw_connector_Zbnf(); 
      return val; 
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_connector?draw_connector&gt;  */
    public Draw_connector_Zbnf new_draw_connector(String draw_end_glue_point, String draw_end_shape, String draw_layer, String draw_line_skew, String draw_start_glue_point, String draw_start_shape, String draw_style_name, String draw_text_style_name, String svg_d, String svg_viewBox, String svg_x1, String svg_x2, String svg_y1, String svg_y2 ) { 
      Draw_connector_Zbnf val = new Draw_connector_Zbnf();
      val.dataDraw_connector.draw_end_glue_point = draw_end_glue_point;
      val.dataDraw_connector.draw_end_shape = draw_end_shape;
      val.dataDraw_connector.draw_layer = draw_layer;
      val.dataDraw_connector.draw_line_skew = draw_line_skew;
      val.dataDraw_connector.draw_start_glue_point = draw_start_glue_point;
      val.dataDraw_connector.draw_start_shape = draw_start_shape;
      val.dataDraw_connector.draw_style_name = draw_style_name;
      val.dataDraw_connector.draw_text_style_name = draw_text_style_name;
      val.dataDraw_connector.svg_d = svg_d;
      val.dataDraw_connector.svg_viewBox = svg_viewBox;
      val.dataDraw_connector.svg_x1 = svg_x1;
      val.dataDraw_connector.svg_x2 = svg_x2;
      val.dataDraw_connector.svg_y1 = svg_y1;
      val.dataDraw_connector.svg_y2 = svg_y2;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Add the result to the list. &lt;Draw_connector?draw_connector&gt;*/
    public void add_draw_connector(Draw_connector val) {
      if(dataDraw_page.draw_connector==null) { dataDraw_page.draw_connector = new LinkedList<Draw_connector>(); }
      dataDraw_page.draw_connector.add(val); 
    }
    
    
    /**create and add routine for the list component <Draw_custom_shape?draw_custom_shape>. */
    public Draw_custom_shape_Zbnf new_draw_custom_shape() { 
      Draw_custom_shape_Zbnf val = new Draw_custom_shape_Zbnf(); 
      return val; 
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_custom_shape?draw_custom_shape&gt;  */
    public Draw_custom_shape_Zbnf new_draw_custom_shape(String draw_id, String draw_layer, String draw_style_name, String draw_text_style_name, String svg_height, String svg_width, String svg_x, String svg_y ) { 
      Draw_custom_shape_Zbnf val = new Draw_custom_shape_Zbnf();
      val.dataDraw_custom_shape.draw_id = draw_id;
      val.dataDraw_custom_shape.draw_layer = draw_layer;
      val.dataDraw_custom_shape.draw_style_name = draw_style_name;
      val.dataDraw_custom_shape.draw_text_style_name = draw_text_style_name;
      val.dataDraw_custom_shape.svg_height = svg_height;
      val.dataDraw_custom_shape.svg_width = svg_width;
      val.dataDraw_custom_shape.svg_x = svg_x;
      val.dataDraw_custom_shape.svg_y = svg_y;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Add the result to the list. &lt;Draw_custom_shape?draw_custom_shape&gt;*/
    public void add_draw_custom_shape(Draw_custom_shape val) {
      if(dataDraw_page.draw_custom_shape==null) { dataDraw_page.draw_custom_shape = new LinkedList<Draw_custom_shape>(); }
      dataDraw_page.draw_custom_shape.add(val); 
    }
    
    
    /**create and add routine for the list component <Draw_frame?draw_frame>. */
    public Draw_frame_Zbnf new_draw_frame() { 
      Draw_frame_Zbnf val = new Draw_frame_Zbnf(); 
      return val; 
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_frame?draw_frame&gt;  */
    public Draw_frame_Zbnf new_draw_frame(String draw_id, String draw_layer, String draw_style_name, String draw_text_style_name, String svg_height, String svg_width, String svg_x, String svg_y ) { 
      Draw_frame_Zbnf val = new Draw_frame_Zbnf();
      val.dataDraw_frame.draw_id = draw_id;
      val.dataDraw_frame.draw_layer = draw_layer;
      val.dataDraw_frame.draw_style_name = draw_style_name;
      val.dataDraw_frame.draw_text_style_name = draw_text_style_name;
      val.dataDraw_frame.svg_height = svg_height;
      val.dataDraw_frame.svg_width = svg_width;
      val.dataDraw_frame.svg_x = svg_x;
      val.dataDraw_frame.svg_y = svg_y;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Add the result to the list. &lt;Draw_frame?draw_frame&gt;*/
    public void add_draw_frame(Draw_frame val) {
      if(dataDraw_page.draw_frame==null) { dataDraw_page.draw_frame = new LinkedList<Draw_frame>(); }
      dataDraw_page.draw_frame.add(val); 
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Draw_g?draw_g&gt; for ZBNF data store*/
    public Draw_g_Zbnf new_draw_g() { 
      Draw_g_Zbnf val = new Draw_g_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_g?draw_g&gt;  */
    public Draw_g_Zbnf new_draw_g(String draw_id ) { 
      Draw_g_Zbnf val = new Draw_g_Zbnf();
      val.dataDraw_g.draw_id = draw_id;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Draw_g?draw_g&gt;*/
    public void set_draw_g(Draw_g val) { 
      dataDraw_page.draw_g = val;
    }
    
    
    /**create and add routine for the list component <Draw_polygon?draw_polygon>. */
    public Draw_polygon_Zbnf new_draw_polygon() { 
      Draw_polygon_Zbnf val = new Draw_polygon_Zbnf(); 
      return val; 
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_polygon?draw_polygon&gt;  */
    public Draw_polygon_Zbnf new_draw_polygon(String draw_layer, String draw_points, String draw_style_name, String draw_text_style_name, String svg_height, String svg_viewBox, String svg_width, String svg_x, String svg_y ) { 
      Draw_polygon_Zbnf val = new Draw_polygon_Zbnf();
      val.dataDraw_polygon.draw_layer = draw_layer;
      val.dataDraw_polygon.draw_points = draw_points;
      val.dataDraw_polygon.draw_style_name = draw_style_name;
      val.dataDraw_polygon.draw_text_style_name = draw_text_style_name;
      val.dataDraw_polygon.svg_height = svg_height;
      val.dataDraw_polygon.svg_viewBox = svg_viewBox;
      val.dataDraw_polygon.svg_width = svg_width;
      val.dataDraw_polygon.svg_x = svg_x;
      val.dataDraw_polygon.svg_y = svg_y;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Add the result to the list. &lt;Draw_polygon?draw_polygon&gt;*/
    public void add_draw_polygon(Draw_polygon val) {
      if(dataDraw_page.draw_polygon==null) { dataDraw_page.draw_polygon = new LinkedList<Draw_polygon>(); }
      dataDraw_page.draw_polygon.add(val); 
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Draw_polyline?draw_polyline&gt; for ZBNF data store*/
    public Draw_polyline_Zbnf new_draw_polyline() { 
      Draw_polyline_Zbnf val = new Draw_polyline_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_polyline?draw_polyline&gt;  */
    public Draw_polyline_Zbnf new_draw_polyline(String draw_layer, String draw_points, String draw_style_name, String draw_text_style_name, String draw_transform, String svg_height, String svg_viewBox, String svg_width ) { 
      Draw_polyline_Zbnf val = new Draw_polyline_Zbnf();
      val.dataDraw_polyline.draw_layer = draw_layer;
      val.dataDraw_polyline.draw_points = draw_points;
      val.dataDraw_polyline.draw_style_name = draw_style_name;
      val.dataDraw_polyline.draw_text_style_name = draw_text_style_name;
      val.dataDraw_polyline.draw_transform = draw_transform;
      val.dataDraw_polyline.svg_height = svg_height;
      val.dataDraw_polyline.svg_viewBox = svg_viewBox;
      val.dataDraw_polyline.svg_width = svg_width;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Draw_polyline?draw_polyline&gt;*/
    public void set_draw_polyline(Draw_polyline val) { 
      dataDraw_page.draw_polyline = val;
    }
    
    
  
  }




  /**Class for Writing the Component Style_list_level_properties.*/
  public static class Style_list_level_properties_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Style_list_level_properties dataStyle_list_level_properties;
    
    /**Default ctor for non-inherit instance. */
    public Style_list_level_properties_Zbnf ( ) {
      this.dataStyle_list_level_properties = new XmlForOdg.Style_list_level_properties();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Style_list_level_properties_Zbnf ( XmlForOdg.Style_list_level_properties data) {
            this.dataStyle_list_level_properties = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataStyle_list_level_properties._srcLine_ = line; 
      this.dataStyle_list_level_properties._srcColumn_ = column; 
      this.dataStyle_list_level_properties._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?text_min_label_width>. */
    public void set_text_min_label_width(String val) { this.dataStyle_list_level_properties.text_min_label_width = val; }
    
    
    /**Set routine for the singular component &lt;String?text_space_before>. */
    public void set_text_space_before(String val) { this.dataStyle_list_level_properties.text_space_before = val; }
    
    
  
  }




  /**Class for Writing the Component Draw_connector.*/
  public static class Draw_connector_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_connector dataDraw_connector;
    
    /**Default ctor for non-inherit instance. */
    public Draw_connector_Zbnf ( ) {
      this.dataDraw_connector = new XmlForOdg.Draw_connector();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_connector_Zbnf ( XmlForOdg.Draw_connector data) {
            this.dataDraw_connector = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_connector._srcLine_ = line; 
      this.dataDraw_connector._srcColumn_ = column; 
      this.dataDraw_connector._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_end_glue_point>. */
    public void set_draw_end_glue_point(String val) { this.dataDraw_connector.draw_end_glue_point = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_end_shape>. */
    public void set_draw_end_shape(String val) { this.dataDraw_connector.draw_end_shape = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_layer>. */
    public void set_draw_layer(String val) { this.dataDraw_connector.draw_layer = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_line_skew>. */
    public void set_draw_line_skew(String val) { this.dataDraw_connector.draw_line_skew = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_start_glue_point>. */
    public void set_draw_start_glue_point(String val) { this.dataDraw_connector.draw_start_glue_point = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_start_shape>. */
    public void set_draw_start_shape(String val) { this.dataDraw_connector.draw_start_shape = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_style_name>. */
    public void set_draw_style_name(String val) { this.dataDraw_connector.draw_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_text_style_name>. */
    public void set_draw_text_style_name(String val) { this.dataDraw_connector.draw_text_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_d>. */
    public void set_svg_d(String val) { this.dataDraw_connector.svg_d = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_viewBox>. */
    public void set_svg_viewBox(String val) { this.dataDraw_connector.svg_viewBox = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_x1>. */
    public void set_svg_x1(String val) { this.dataDraw_connector.svg_x1 = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_x2>. */
    public void set_svg_x2(String val) { this.dataDraw_connector.svg_x2 = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_y1>. */
    public void set_svg_y1(String val) { this.dataDraw_connector.svg_y1 = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_y2>. */
    public void set_svg_y2(String val) { this.dataDraw_connector.svg_y2 = val; }
    
    
    /**Set routine for the singular component &lt;String?text_p>. */
    public void set_text_p(String val) { this.dataDraw_connector.text_p = val; }
    
    
  
  }




  /**Class for Writing the Component Draw_custom_shape.*/
  public static class Draw_custom_shape_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_custom_shape dataDraw_custom_shape;
    
    /**Default ctor for non-inherit instance. */
    public Draw_custom_shape_Zbnf ( ) {
      this.dataDraw_custom_shape = new XmlForOdg.Draw_custom_shape();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_custom_shape_Zbnf ( XmlForOdg.Draw_custom_shape data) {
            this.dataDraw_custom_shape = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_custom_shape._srcLine_ = line; 
      this.dataDraw_custom_shape._srcColumn_ = column; 
      this.dataDraw_custom_shape._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_id>. */
    public void set_draw_id(String val) { this.dataDraw_custom_shape.draw_id = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_layer>. */
    public void set_draw_layer(String val) { this.dataDraw_custom_shape.draw_layer = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_style_name>. */
    public void set_draw_style_name(String val) { this.dataDraw_custom_shape.draw_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_text_style_name>. */
    public void set_draw_text_style_name(String val) { this.dataDraw_custom_shape.draw_text_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_height>. */
    public void set_svg_height(String val) { this.dataDraw_custom_shape.svg_height = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_width>. */
    public void set_svg_width(String val) { this.dataDraw_custom_shape.svg_width = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_x>. */
    public void set_svg_x(String val) { this.dataDraw_custom_shape.svg_x = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_y>. */
    public void set_svg_y(String val) { this.dataDraw_custom_shape.svg_y = val; }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Draw_enhanced_geometry?draw_enhanced_geometry&gt; for ZBNF data store*/
    public Draw_enhanced_geometry_Zbnf new_draw_enhanced_geometry() { 
      Draw_enhanced_geometry_Zbnf val = new Draw_enhanced_geometry_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_enhanced_geometry?draw_enhanced_geometry&gt;  */
    public Draw_enhanced_geometry_Zbnf new_draw_enhanced_geometry(String draw_enhanced_path, String draw_glue_points, String draw_mirror_horizontal, String draw_mirror_vertical, String draw_modifiers, String draw_text_areas, String draw_type, String svg_viewBox ) { 
      Draw_enhanced_geometry_Zbnf val = new Draw_enhanced_geometry_Zbnf();
      val.dataDraw_enhanced_geometry.draw_enhanced_path = draw_enhanced_path;
      val.dataDraw_enhanced_geometry.draw_glue_points = draw_glue_points;
      val.dataDraw_enhanced_geometry.draw_mirror_horizontal = draw_mirror_horizontal;
      val.dataDraw_enhanced_geometry.draw_mirror_vertical = draw_mirror_vertical;
      val.dataDraw_enhanced_geometry.draw_modifiers = draw_modifiers;
      val.dataDraw_enhanced_geometry.draw_text_areas = draw_text_areas;
      val.dataDraw_enhanced_geometry.draw_type = draw_type;
      val.dataDraw_enhanced_geometry.svg_viewBox = svg_viewBox;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Draw_enhanced_geometry?draw_enhanced_geometry&gt;*/
    public void set_draw_enhanced_geometry(Draw_enhanced_geometry val) { 
      dataDraw_custom_shape.draw_enhanced_geometry = val;
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Text_p?text_p&gt; for ZBNF data store*/
    public Text_p_Zbnf new_text_p() { 
      Text_p_Zbnf val = new Text_p_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Text_p?text_p&gt;  */
    public Text_p_Zbnf new_text_p(String text_style_name ) { 
      Text_p_Zbnf val = new Text_p_Zbnf();
      val.dataText_p.text_style_name = text_style_name;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Text_p?text_p&gt;*/
    public void set_text_p(Text_p val) { 
      dataDraw_custom_shape.text_p = val;
    }
    
    
  
  }




  /**Class for Writing the Component Draw_frame.*/
  public static class Draw_frame_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_frame dataDraw_frame;
    
    /**Default ctor for non-inherit instance. */
    public Draw_frame_Zbnf ( ) {
      this.dataDraw_frame = new XmlForOdg.Draw_frame();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_frame_Zbnf ( XmlForOdg.Draw_frame data) {
            this.dataDraw_frame = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_frame._srcLine_ = line; 
      this.dataDraw_frame._srcColumn_ = column; 
      this.dataDraw_frame._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_id>. */
    public void set_draw_id(String val) { this.dataDraw_frame.draw_id = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_layer>. */
    public void set_draw_layer(String val) { this.dataDraw_frame.draw_layer = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_style_name>. */
    public void set_draw_style_name(String val) { this.dataDraw_frame.draw_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_text_style_name>. */
    public void set_draw_text_style_name(String val) { this.dataDraw_frame.draw_text_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_height>. */
    public void set_svg_height(String val) { this.dataDraw_frame.svg_height = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_width>. */
    public void set_svg_width(String val) { this.dataDraw_frame.svg_width = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_x>. */
    public void set_svg_x(String val) { this.dataDraw_frame.svg_x = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_y>. */
    public void set_svg_y(String val) { this.dataDraw_frame.svg_y = val; }
    
    
    /**Creates an instance for the result Zbnf . &lt;Draw_text_box?draw_text_box&gt; for ZBNF data store*/
    public Draw_text_box_Zbnf new_draw_text_box() { 
      Draw_text_box_Zbnf val = new Draw_text_box_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Draw_text_box?draw_text_box&gt;*/
    public void set_draw_text_box(Draw_text_box val) { 
      dataDraw_frame.draw_text_box = val;
    }
    
    
  
  }




  /**Class for Writing the Component Draw_g.*/
  public static class Draw_g_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_g dataDraw_g;
    
    /**Default ctor for non-inherit instance. */
    public Draw_g_Zbnf ( ) {
      this.dataDraw_g = new XmlForOdg.Draw_g();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_g_Zbnf ( XmlForOdg.Draw_g data) {
            this.dataDraw_g = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_g._srcLine_ = line; 
      this.dataDraw_g._srcColumn_ = column; 
      this.dataDraw_g._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_id>. */
    public void set_draw_id(String val) { this.dataDraw_g.draw_id = val; }
    
    
    /**Creates an instance for the result Zbnf . &lt;Draw_g_A?draw_g&gt; for ZBNF data store*/
    public Draw_g_A_Zbnf new_draw_g() { 
      Draw_g_A_Zbnf val = new Draw_g_A_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Draw_g_A?draw_g&gt;*/
    public void set_draw_g(Draw_g_A val) { 
      dataDraw_g.draw_g = val;
    }
    
    
  
  }




  /**Class for Writing the Component Draw_polygon.*/
  public static class Draw_polygon_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_polygon dataDraw_polygon;
    
    /**Default ctor for non-inherit instance. */
    public Draw_polygon_Zbnf ( ) {
      this.dataDraw_polygon = new XmlForOdg.Draw_polygon();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_polygon_Zbnf ( XmlForOdg.Draw_polygon data) {
            this.dataDraw_polygon = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_polygon._srcLine_ = line; 
      this.dataDraw_polygon._srcColumn_ = column; 
      this.dataDraw_polygon._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_layer>. */
    public void set_draw_layer(String val) { this.dataDraw_polygon.draw_layer = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_points>. */
    public void set_draw_points(String val) { this.dataDraw_polygon.draw_points = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_style_name>. */
    public void set_draw_style_name(String val) { this.dataDraw_polygon.draw_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_text_style_name>. */
    public void set_draw_text_style_name(String val) { this.dataDraw_polygon.draw_text_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_height>. */
    public void set_svg_height(String val) { this.dataDraw_polygon.svg_height = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_viewBox>. */
    public void set_svg_viewBox(String val) { this.dataDraw_polygon.svg_viewBox = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_width>. */
    public void set_svg_width(String val) { this.dataDraw_polygon.svg_width = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_x>. */
    public void set_svg_x(String val) { this.dataDraw_polygon.svg_x = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_y>. */
    public void set_svg_y(String val) { this.dataDraw_polygon.svg_y = val; }
    
    
    /**Set routine for the singular component &lt;String?text_p>. */
    public void set_text_p(String val) { this.dataDraw_polygon.text_p = val; }
    
    
  
  }




  /**Class for Writing the Component Draw_polyline.*/
  public static class Draw_polyline_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_polyline dataDraw_polyline;
    
    /**Default ctor for non-inherit instance. */
    public Draw_polyline_Zbnf ( ) {
      this.dataDraw_polyline = new XmlForOdg.Draw_polyline();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_polyline_Zbnf ( XmlForOdg.Draw_polyline data) {
            this.dataDraw_polyline = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_polyline._srcLine_ = line; 
      this.dataDraw_polyline._srcColumn_ = column; 
      this.dataDraw_polyline._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_layer>. */
    public void set_draw_layer(String val) { this.dataDraw_polyline.draw_layer = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_points>. */
    public void set_draw_points(String val) { this.dataDraw_polyline.draw_points = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_style_name>. */
    public void set_draw_style_name(String val) { this.dataDraw_polyline.draw_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_text_style_name>. */
    public void set_draw_text_style_name(String val) { this.dataDraw_polyline.draw_text_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_transform>. */
    public void set_draw_transform(String val) { this.dataDraw_polyline.draw_transform = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_height>. */
    public void set_svg_height(String val) { this.dataDraw_polyline.svg_height = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_viewBox>. */
    public void set_svg_viewBox(String val) { this.dataDraw_polyline.svg_viewBox = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_width>. */
    public void set_svg_width(String val) { this.dataDraw_polyline.svg_width = val; }
    
    
    /**Set routine for the singular component &lt;String?text_p>. */
    public void set_text_p(String val) { this.dataDraw_polyline.text_p = val; }
    
    
  
  }




  /**Class for Writing the Component Draw_enhanced_geometry.*/
  public static class Draw_enhanced_geometry_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_enhanced_geometry dataDraw_enhanced_geometry;
    
    /**Default ctor for non-inherit instance. */
    public Draw_enhanced_geometry_Zbnf ( ) {
      this.dataDraw_enhanced_geometry = new XmlForOdg.Draw_enhanced_geometry();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_enhanced_geometry_Zbnf ( XmlForOdg.Draw_enhanced_geometry data) {
            this.dataDraw_enhanced_geometry = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_enhanced_geometry._srcLine_ = line; 
      this.dataDraw_enhanced_geometry._srcColumn_ = column; 
      this.dataDraw_enhanced_geometry._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_enhanced_path>. */
    public void set_draw_enhanced_path(String val) { this.dataDraw_enhanced_geometry.draw_enhanced_path = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_glue_points>. */
    public void set_draw_glue_points(String val) { this.dataDraw_enhanced_geometry.draw_glue_points = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_mirror_horizontal>. */
    public void set_draw_mirror_horizontal(String val) { this.dataDraw_enhanced_geometry.draw_mirror_horizontal = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_mirror_vertical>. */
    public void set_draw_mirror_vertical(String val) { this.dataDraw_enhanced_geometry.draw_mirror_vertical = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_modifiers>. */
    public void set_draw_modifiers(String val) { this.dataDraw_enhanced_geometry.draw_modifiers = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_text_areas>. */
    public void set_draw_text_areas(String val) { this.dataDraw_enhanced_geometry.draw_text_areas = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_type>. */
    public void set_draw_type(String val) { this.dataDraw_enhanced_geometry.draw_type = val; }
    
    
    /**Set routine for the singular component &lt;String?svg_viewBox>. */
    public void set_svg_viewBox(String val) { this.dataDraw_enhanced_geometry.svg_viewBox = val; }
    
    
    /**create and add routine for the list component <Draw_equation?draw_equation>. */
    public Draw_equation_Zbnf new_draw_equation() { 
      Draw_equation_Zbnf val = new Draw_equation_Zbnf(); 
      return val; 
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_equation?draw_equation&gt;  */
    public Draw_equation_Zbnf new_draw_equation(String draw_formula, String draw_name ) { 
      Draw_equation_Zbnf val = new Draw_equation_Zbnf();
      val.dataDraw_equation.draw_formula = draw_formula;
      val.dataDraw_equation.draw_name = draw_name;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Add the result to the list. &lt;Draw_equation?draw_equation&gt;*/
    public void add_draw_equation(Draw_equation val) {
      if(dataDraw_enhanced_geometry.draw_equation==null) { dataDraw_enhanced_geometry.draw_equation = new LinkedList<Draw_equation>(); }
      dataDraw_enhanced_geometry.draw_equation.add(val); 
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Draw_handle?draw_handle&gt; for ZBNF data store*/
    public Draw_handle_Zbnf new_draw_handle() { 
      Draw_handle_Zbnf val = new Draw_handle_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_handle?draw_handle&gt;  */
    public Draw_handle_Zbnf new_draw_handle(String draw_handle_position, String draw_handle_range_x_maximum, String draw_handle_range_x_minimum, String draw_handle_range_y_maximum, String draw_handle_range_y_minimum ) { 
      Draw_handle_Zbnf val = new Draw_handle_Zbnf();
      val.dataDraw_handle.draw_handle_position = draw_handle_position;
      val.dataDraw_handle.draw_handle_range_x_maximum = draw_handle_range_x_maximum;
      val.dataDraw_handle.draw_handle_range_x_minimum = draw_handle_range_x_minimum;
      val.dataDraw_handle.draw_handle_range_y_maximum = draw_handle_range_y_maximum;
      val.dataDraw_handle.draw_handle_range_y_minimum = draw_handle_range_y_minimum;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Draw_handle?draw_handle&gt;*/
    public void set_draw_handle(Draw_handle val) { 
      dataDraw_enhanced_geometry.draw_handle = val;
    }
    
    
  
  }




  /**Class for Writing the Component Text_p.*/
  public static class Text_p_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Text_p dataText_p;
    
    /**Default ctor for non-inherit instance. */
    public Text_p_Zbnf ( ) {
      this.dataText_p = new XmlForOdg.Text_p();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Text_p_Zbnf ( XmlForOdg.Text_p data) {
            this.dataText_p = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataText_p._srcLine_ = line; 
      this.dataText_p._srcColumn_ = column; 
      this.dataText_p._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?text_style_name>. */
    public void set_text_style_name(String val) { this.dataText_p.text_style_name = val; }
    
    
    /**Set routine for the singular component &lt;String?text_s>. */
    public void set_text_s(String val) { this.dataText_p.text_s = val; }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Text_span?text_span&gt; for ZBNF data store*/
    public Text_span_Zbnf new_text_span() { 
      Text_span_Zbnf val = new Text_span_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Text_span?text_span&gt;  */
    public Text_span_Zbnf new_text_span(String text_style_name ) { 
      Text_span_Zbnf val = new Text_span_Zbnf();
      val.dataText_span.text_style_name = text_style_name;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Text_span?text_span&gt;*/
    public void set_text_span(Text_span val) { 
      dataText_p.text_span = val;
    }
    
    
  
  }




  /**Class for Writing the Component Draw_text_box.*/
  public static class Draw_text_box_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_text_box dataDraw_text_box;
    
    /**Default ctor for non-inherit instance. */
    public Draw_text_box_Zbnf ( ) {
      this.dataDraw_text_box = new XmlForOdg.Draw_text_box();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_text_box_Zbnf ( XmlForOdg.Draw_text_box data) {
            this.dataDraw_text_box = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_text_box._srcLine_ = line; 
      this.dataDraw_text_box._srcColumn_ = column; 
      this.dataDraw_text_box._srcFile_ = sFile; 
    }
  
  
  
  
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Text_p?text_p&gt; for ZBNF data store*/
    public Text_p_Zbnf new_text_p() { 
      Text_p_Zbnf val = new Text_p_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Text_p?text_p&gt;  */
    public Text_p_Zbnf new_text_p(String text_style_name ) { 
      Text_p_Zbnf val = new Text_p_Zbnf();
      val.dataText_p.text_style_name = text_style_name;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Text_p?text_p&gt;*/
    public void set_text_p(Text_p val) { 
      dataDraw_text_box.text_p = val;
    }
    
    
  
  }




  /**Class for Writing the Component Draw_g_A.*/
  public static class Draw_g_A_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_g_A dataDraw_g_A;
    
    /**Default ctor for non-inherit instance. */
    public Draw_g_A_Zbnf ( ) {
      this.dataDraw_g_A = new XmlForOdg.Draw_g_A();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_g_A_Zbnf ( XmlForOdg.Draw_g_A data) {
            this.dataDraw_g_A = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_g_A._srcLine_ = line; 
      this.dataDraw_g_A._srcColumn_ = column; 
      this.dataDraw_g_A._srcFile_ = sFile; 
    }
  
  
  
  
    /**create and add routine for the list component <Draw_frame?draw_frame>. */
    public Draw_frame_Zbnf new_draw_frame() { 
      Draw_frame_Zbnf val = new Draw_frame_Zbnf(); 
      return val; 
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_frame?draw_frame&gt;  */
    public Draw_frame_Zbnf new_draw_frame(String draw_id, String draw_layer, String draw_style_name, String draw_text_style_name, String svg_height, String svg_width, String svg_x, String svg_y ) { 
      Draw_frame_Zbnf val = new Draw_frame_Zbnf();
      val.dataDraw_frame.draw_id = draw_id;
      val.dataDraw_frame.draw_layer = draw_layer;
      val.dataDraw_frame.draw_style_name = draw_style_name;
      val.dataDraw_frame.draw_text_style_name = draw_text_style_name;
      val.dataDraw_frame.svg_height = svg_height;
      val.dataDraw_frame.svg_width = svg_width;
      val.dataDraw_frame.svg_x = svg_x;
      val.dataDraw_frame.svg_y = svg_y;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Add the result to the list. &lt;Draw_frame?draw_frame&gt;*/
    public void add_draw_frame(Draw_frame val) {
      if(dataDraw_g_A.draw_frame==null) { dataDraw_g_A.draw_frame = new LinkedList<Draw_frame>(); }
      dataDraw_g_A.draw_frame.add(val); 
    }
    
    
    /**Creates an instance for the result Zbnf  (not Xml) . &lt;Draw_polygon?draw_polygon&gt; for ZBNF data store*/
    public Draw_polygon_Zbnf new_draw_polygon() { 
      Draw_polygon_Zbnf val = new Draw_polygon_Zbnf();
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Creates an instance for the Xml data storage with default attibutes. &lt;Draw_polygon?draw_polygon&gt;  */
    public Draw_polygon_Zbnf new_draw_polygon(String draw_layer, String draw_points, String draw_style_name, String draw_text_style_name, String svg_height, String svg_viewBox, String svg_width, String svg_x, String svg_y ) { 
      Draw_polygon_Zbnf val = new Draw_polygon_Zbnf();
      val.dataDraw_polygon.draw_layer = draw_layer;
      val.dataDraw_polygon.draw_points = draw_points;
      val.dataDraw_polygon.draw_style_name = draw_style_name;
      val.dataDraw_polygon.draw_text_style_name = draw_text_style_name;
      val.dataDraw_polygon.svg_height = svg_height;
      val.dataDraw_polygon.svg_viewBox = svg_viewBox;
      val.dataDraw_polygon.svg_width = svg_width;
      val.dataDraw_polygon.svg_x = svg_x;
      val.dataDraw_polygon.svg_y = svg_y;
      //
      return val; //Note: needs the derived Zbnf-Type.
    }
    
    /**Set the result. &lt;Draw_polygon?draw_polygon&gt;*/
    public void set_draw_polygon(Draw_polygon val) { 
      dataDraw_g_A.draw_polygon = val;
    }
    
    
  
  }




  /**Class for Writing the Component Draw_equation.*/
  public static class Draw_equation_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_equation dataDraw_equation;
    
    /**Default ctor for non-inherit instance. */
    public Draw_equation_Zbnf ( ) {
      this.dataDraw_equation = new XmlForOdg.Draw_equation();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_equation_Zbnf ( XmlForOdg.Draw_equation data) {
            this.dataDraw_equation = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_equation._srcLine_ = line; 
      this.dataDraw_equation._srcColumn_ = column; 
      this.dataDraw_equation._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_formula>. */
    public void set_draw_formula(String val) { this.dataDraw_equation.draw_formula = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_name>. */
    public void set_draw_name(String val) { this.dataDraw_equation.draw_name = val; }
    
    
  
  }




  /**Class for Writing the Component Draw_handle.*/
  public static class Draw_handle_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Draw_handle dataDraw_handle;
    
    /**Default ctor for non-inherit instance. */
    public Draw_handle_Zbnf ( ) {
      this.dataDraw_handle = new XmlForOdg.Draw_handle();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Draw_handle_Zbnf ( XmlForOdg.Draw_handle data) {
            this.dataDraw_handle = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataDraw_handle._srcLine_ = line; 
      this.dataDraw_handle._srcColumn_ = column; 
      this.dataDraw_handle._srcFile_ = sFile; 
    }
  
  
  
  
    /**Set routine for the singular component &lt;String?draw_handle_position>. */
    public void set_draw_handle_position(String val) { this.dataDraw_handle.draw_handle_position = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_handle_range_x_maximum>. */
    public void set_draw_handle_range_x_maximum(String val) { this.dataDraw_handle.draw_handle_range_x_maximum = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_handle_range_x_minimum>. */
    public void set_draw_handle_range_x_minimum(String val) { this.dataDraw_handle.draw_handle_range_x_minimum = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_handle_range_y_maximum>. */
    public void set_draw_handle_range_y_maximum(String val) { this.dataDraw_handle.draw_handle_range_y_maximum = val; }
    
    
    /**Set routine for the singular component &lt;String?draw_handle_range_y_minimum>. */
    public void set_draw_handle_range_y_minimum(String val) { this.dataDraw_handle.draw_handle_range_y_minimum = val; }
    
    
  
  }




  /**Class for Writing the Component Text_span.*/
  public static class Text_span_Zbnf implements SetLineColumn_ifc {
    /**Referenced working instance will be filled.*/
    final XmlForOdg.Text_span dataText_span;
    
    /**Default ctor for non-inherit instance. */
    public Text_span_Zbnf ( ) {
      this.dataText_span = new XmlForOdg.Text_span();
    }
    
    /**ctor called as super ctor possible, not in any case for a inherited instance. */
    public Text_span_Zbnf ( XmlForOdg.Text_span data) {
            this.dataText_span = data;
    }
    
    @Override public int setLineColumnFileMode ( ) {
      return SetLineColumn_ifc.mLine + SetLineColumn_ifc.mColumn + SetLineColumn_ifc.mFile; }
    
    @Override public void setLineColumnFile ( int line, int column, String sFile) { 
      this.dataText_span._srcLine_ = line; 
      this.dataText_span._srcColumn_ = column; 
      this.dataText_span._srcFile_ = sFile; 
    }
  
  
  
  
  
  }


}

